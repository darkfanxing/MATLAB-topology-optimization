function [elements_number, k_e, iK, jK] = init_stiffness_matrix(nel_x, nel_y, nu)
    % KE = 4-node unit stiffness matrix
    A11 = [12  3 -6 -3;  3 12  3  0; -6  3 12 -3; -3  0 -3 12];
    A12 = [-6 -3  0  3; -3 -6 -3 -6;  0 -3 -6  3;  3 -6  3 -6];
    B11 = [-4  3 -2  9;  3 -4 -9  4; -2 -9 -4 -3;  9  4 -3 -4];
    B12 = [ 2 -3  4 -9; -3  2  9 -2;  4  9  2  3; -9 -2  3  2];
    k_e = 1 / (1 - nu^2) / 24 * ([A11 A12; A12' A11] + nu * [B11 B12; B12' B11]);
    
    % dof: degree of freedom
    % 4-node, x-y (2) axis, the degree of freedom (dof) is 4 * 2 = 8
    % the order of element dof: [lb x, lb y, rb x, rb y, rt x, rt y, lt x, lt y]
    % l: left
    % r: right
    % b: bottom
    % t: top
    node_numbers = reshape( ...
        1:(nel_x + 1) * (nel_y + 1), ...
        nel_y + 1, ...
        nel_x + 1 ...
    );

    elements_lb_number = reshape( ...
        2 * node_numbers(1:end - 1, 1:end - 1) + 1, ...
        nel_x * nel_y, ...
        1 ...
    );

    elements_number = ...
        repmat(elements_lb_number, 1, 8) ...
        + repmat( ...
            [0 1 2*nel_y+[2 3 0 1] -2 -1], ...
            nel_x * nel_y, ...
            1 ...
        );

    iK = reshape(kron(elements_number, ones(8,1))', 64 * nel_x * nel_y, 1);
    jK = reshape(kron(elements_number, ones(1,8))', 64 * nel_x * nel_y, 1);
end
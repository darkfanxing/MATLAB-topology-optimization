function [sensitivity_objective_function_value, sensitivity_volume_fraction] = sensitivity_filter( ...
    x, ...
    sensitivity_objective_function_value, ...
    sensitivity_volume_fraction, ...
    H, ...
    Hs, ...
    senitivity_filter_class, ...
    is_spring, ...
    beta, ...
    x_filter ...
)
    % filter class: [1, 2]
    % - 1: sensitivity filter
    % - 2: density filter
    
    factor = ones(size(x, 1), size(x, 2));
    if senitivity_filter_class == 1
        sensitivity_objective_function_value(:) = H * (x(:) .* sensitivity_objective_function_value(:)) ./ Hs ./ max(1e-3, x(:));
    elseif senitivity_filter_class == 2
        if is_spring
            factor = beta * sech(beta * (x_filter - 0.5)).^2/(tanh(beta * 0.5) + tanh(beta * (1 - 0.5)));
        end
    end
    sensitivity_objective_function_value(:) = H * (sensitivity_objective_function_value(:) .* factor(:) ./ Hs);
    sensitivity_volume_fraction(:) = H * (sensitivity_volume_fraction(:) ./ Hs);
end